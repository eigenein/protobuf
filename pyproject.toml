[tool.poetry]
authors = [
    "Pavel Perestoronin <eigenein@gmail.com>",
    "Bo Bayles",
    "Théo Mathieu",
    "Aleksey Zubakov",
    "Tobias Kölling",
    "Shiba",
]
description = "Protocol Buffers using Python type annotations"
keywords = ["protobuf", "protocol-buffers"]
license = "MIT"
name = "pure-protobuf"
readme = "README.md"
repository = "https://github.com/eigenein/protobuf"
version = "0.0.0"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: MIT License",
    "Typing :: Typed",
]

[build-system]
requires = ["poetry-core", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry.dependencies]
get-annotations = { version = "^0.1.2", python = "<3.10" }
python = "^3.8.0"
typing-extensions = "^4.4.0"

[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
black = "23.9.1"
cairosvg = "2.7.1"
mkdocs-autorefs = "0.5.0"
mkdocs-git-revision-date-localized-plugin = "1.2.0"
mkdocs-material = "9.3.2"
mkdocstrings = { version = "0.23.0", extras = ["python"] }
mypy = "1.5.1"
pillow = "10.0.1"
pydantic = "1.10.12"
pytest = "7.4.2"
pytest-benchmark = "4.0.0"
pytest-cov = "4.1.0"
ruff = "0.0.290"

[tool.poetry.urls]
"Changelog" = "https://github.com/eigenein/protobuf/blob/master/CHANGELOG.md"
"Homepage" = "https://github.com/eigenein/protobuf"
"Issues" = "https://github.com/eigenein/protobuf/issues"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "default-unprefixed"
style = "pep440"
strict = true
latest-tag = true

[tool.mypy]
allow_redefinition = true
allow_untyped_globals = true
check_untyped_defs = true
enable_incomplete_feature = "TypeVarTuple, Unpack"
ignore_missing_imports = true
pretty = true

[tool.pytest.ini_options]
addopts = "--cov=./ --cov-report=xml"

[tool.coverage.run]
source = ["pure_protobuf"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "except ImportError",
    "if TYPE_CHECKING:",
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.black]
line-length = 120
target-version = ["py38", "py39", "py310", "py311"]

[tool.ruff]
line-length = 120
target-version = "py38"
select = [
    "A",
    "ANN",
    "B",
    "C4",
    "COM",
    "D",
    "E",
    "F",
    "I",
    "N",
    "PIE",
    "PT",
    "PTH",
    "RET",
    "SIM",
    "T20",
    "TRY",
    "UP",
    "W",
    "YTT",
]
ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "D100",
    "D101",  # TODO
    "D102",  # TODO
    "D103",
    "D104",
    "D107",
    "D202",
    "D203",
    "D205",
    "D212",  # alternative of D213
    "D406",
    "D407",
    "E501",  # prevents black from running
    "PT001",
    "PT011",
    "PT013",
    "RET505",
    "TRY003",
    "UP006",  # 3.9
    "UP007",  # 3.10
    "UP033",  # 3.9
]
unfixable = ["B"]

[tool.ruff.per-file-ignores]
"tests/*" = ["D101", "D102", "D106", "D205"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
